---
name: Check
on:
  - push
  - pull_request


jobs:
  check-commits:
    name: Check Commit Messages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check Commit Messages
        run: |
          REGEX='^(?<type>build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|¯\\_\(ツ\)_\/¯)(?<scope>\(\w+\)?((?=:\s)|(?=!:\s)))?(?<breaking>!)?(?<subject>:\s.*)?|^(?<merge>Merge \w+)'
          git log --pretty="%s" `git log origin/HEAD -n 1 --pretty=format:"%h"`..HEAD | while read line; do
            if echo $line | egrep -qv '^(?<type>build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|¯\\_\(ツ\)_\/¯)(?<scope>\(\w+\)?((?=:\s)|(?=!:\s)))?(?<breaking>!)?(?<subject>:\s.*)?|^(?<merge>Merge \w+)'; then
              echo "commit message check failed: ${line}"
              echo
              echo "message is not convention commits format"
              echo "please see https://www.conventionalcommits.org/en/v1.0.0/#specification"

              exit 1
            fi
          done

  dco-check:
    name: DCO Check
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Commits
        id: get-pr-commits
        uses: tim-actions/get-pr-commits@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: DCO Check
        uses: tim-actions/dco@master
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}

  license-check:
    name: Check License Lines
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Check License Lines
        uses: kt3k/license_checker@v1.0.6

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
