---
name: Run CLI Integration Test
description: Run CLI Integration Test

inputs:
  collection:
    description: Set to true for testing Workload collections
    required: true
    default: false

runs:
  using: composite
  steps:
    - name: Build Companion CLI
      shell: bash
      working-directory: /tmp/operator-builder-test
      run: go mod tidy && make build-cli

    - name: Determine CLI Name and Workload Manifest
      if: ${{ !inputs.collection }}
      id: get-cli-inputs
      shell: bash
      working-directory: /tmp/operator-builder-test
      run: |
        COMMAND=`find ${PWD}/bin ! -name kustomize ! -name controller-gen ! -name operator-builder -type f`
        MANIFEST=`ls config/samples | head -1`
        echo "::set-output name=command::${COMMAND}"
        echo "::set-output name=manifest::${MANIFEST}"

    - name: Generate and Apply Child Resources
      if: ${{ !inputs.collection }}
      shell: bash
      run: |
        ${{ steps.get-cli-inputs.outputs.command }} generate \
          ${{ inputs.generate-flag }} ${{ steps.get-cli-inputs.outputs.manifest }} \
          | kubectl apply -f -

    - name: Uninstall Child Resources
      if: ${{ !inputs.collection }}
      shell: bash
      run: |
        ${{ steps.get-cli-inputs.outputs.command }} generate \
          ${{ inputs.generate-flag }} ${{ steps.get-cli-inputs.outputs.manifest }} \
          | kubectl delete -f -

    - name: Initialize Parent Custom Resources
      if: ${{ !inputs.collection }}
      shell: bash
      run: |
        make install
        ${{ steps.get-cli-inputs.outputs.command }} init | kubectl apply -f -

    - name: Uninstall Parent Custom Resources
      if: ${{ !inputs.collection }}
      shell: bash
      run: make uninstall
